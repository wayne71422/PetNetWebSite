@model PetsWebSite.Models.ViewModels.BookDateVm

@{
    ViewData["Title"] = "Book";
}

@section styles{
    <!-- Custom styles for this page -->

    
    <link href="~/css/Bookpage.css" rel="stylesheet">
}


<main class="flex-shrink-0">
    <div class="container py-5">
        <div  class="form-container">
            <h2>預約諮詢</h2>
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger">
                    <ul>
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    </ul>
                </div>
            }
            <form v-on:submit.prevent="submitBooking">
                <div class="mb-3">
                    <label for="PetId">寵物名稱</label>
                    <select v-model="selectedPet" class="form-control">
                        @if (Model.PetId != 0)
                        {
                            <option value="@Model.PetId" selected>@Model.PetName</option>
                        }
                        else
                        {
                            <option value="">請選擇寵物</option>
                            <option v-for="pet in pets" :key="pet.Value" :value="pet.Value">
                                {{ pet.Text }}
                            </option>
                        }
                        @if (Model.PetId == 0) { ViewData.ModelState.AddModelError("PetId", "請選擇寵物"); }
                    </select>
                </div>

                <div class="mb-3">
                    <label for="DoctorId">醫生名稱</label>
                    <select v-model="selectedDoctor" v-on:change="fetchAvailableDates" class="form-control">
                        <option value="">請選擇醫生</option>
                        <option v-for="doctor in doctors" :key="doctor.Value" :value="doctor.Value">
                            {{ doctor.Text }}
                        </option>
                    </select>
                </div>

                <div v-if="availableDates.length > 0" class="mb-3">
                    <label for="DateSelect">可預約日期</label>
                    <select v-model="selectedDate" v-on:change="fetchAvailableTimeSlots" class="form-control">
                        <option value="">請選擇日期</option>
                        <option v-for="date in availableDates" :key="date.Value" :value="date.Value">
                            {{ date.Text }}
                        </option>
                    </select>
                </div>

                <div v-if="availableTimeSlots.length > 0" class="mb-3">
                    <label for="TimeSlotSelect">可預約時段</label>
                    <select v-model="selectedTimeSlot" class="form-control">
                        <option value="">請選擇時段</option>
                        <option v-for="timeSlot in availableTimeSlots" :key="timeSlot.Value" :value="timeSlot.Value">
                            {{ timeSlot.Text }}
                        </option>
                    </select>
                </div>

                <div class="mb-3">
                    <button type="submit" class="btn btn-primary">提交預約</button>
                </div>

            </form>
            <div>
                <p>貓狗有佳提醒您!預約諮詢後請準時上線赴約，超過半小時未赴約視同放棄，且預約金將用作補償醫生們的時間，請確保您的預約時段能正常赴約後再選擇預約喔!</p>
            </div>
        </div>
    </div>
</main>


<script src="https://unpkg.com/vue@3"></script>
<script>

    const app = Vue.createApp({
        setup() {
            const selectedPet = Vue.ref('');            // 目前選擇的寵物 ID
            const selectedDoctor = Vue.ref('');         // 目前選擇的醫生 ID
            const selectedDate = Vue.ref('');           // 目前選擇的日期
            const selectedTimeSlot = Vue.ref('');       // 目前選擇的時段 ID
            const pets = Vue.ref([]);                   // 寵物列表
            const doctors = Vue.ref([]);                // 醫生列表
            const availableDates = Vue.ref([]);         // 可用的日期列表
            const availableTimeSlots = Vue.ref([]);     // 可用的時段列表

            // Fetch doctors
            const fetchDoctors = async () => {
                try {
                    const response = await fetch('@Url.Action("GetDoctors", "BookDate")');
                    const data = await response.json();
                    doctors.value = data.doctors;
                } catch (error) {
                    console.error('Error fetching doctors:', error);
                }
            };

            // Fetch pets
            const fetchPets = async () => {
                try {
                    const response = await fetch('@Url.Action("GetPets", "BookDate")');
                    const data = await response.json();
                    pets.value = data.pets;
                } catch (error) {
                    console.error('Error fetching pets:', error);
                }
            };

            // Fetch available dates for selected doctor
            const fetchAvailableDates = async () => {
                if (selectedDoctor.value) {
                    try {
                        const response = await fetch('@Url.Action("GetAvailableDates", "BookDate")?doctorId=' + selectedDoctor.value);
                        const data = await response.json();
                        availableDates.value = data.availableDates;
                        selectedDate.value = '';
                        availableTimeSlots.value = [];
                    } catch (error) {
                        console.error('Error fetching available dates:', error);
                    }
                } else {
                    availableDates.value = [];
                    availableTimeSlots.value = [];
                }
            };

            // Fetch available time slots for selected doctor and date
            const fetchAvailableTimeSlots = async () => {
                if (selectedDoctor.value && selectedDate.value) {
                    try {
                        const response = await fetch('@Url.Action("GetAvailableTimeSlots", "BookDate")?doctorId=' + selectedDoctor.value + '&selectedDate=' + selectedDate.value);
                        const data = await response.json();
                        availableTimeSlots.value = data.availableTimeSlots;
                        selectedTimeSlot.value = '';
                    } catch (error) {
                        console.error('Error fetching available time slots:', error);
                    }
                } else {
                    availableTimeSlots.value = [];
                }
            };

            // Submit booking
            const submitBooking = async () => {
                if (selectedDoctor.value && selectedDate.value && selectedTimeSlot.value) {
                    const bookingData = {
                        petId: selectedPet.value,
                        doctorId: selectedDoctor.value,
                        selectedDate: selectedDate.value,
                        timeSlotId: selectedTimeSlot.value
                    };

                    try {
                        const response = await fetch('@Url.Action("SubmitBooking", "BookDate")', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(bookingData)
                        });

                        const data = await response.json();
                        if (data.success) {
                            @*alert('預約成功');
                            window.location.href = '@Url.Action("BookCheck", "BookDate")';*@
                            Swal.fire({
                                position: "top-end",
                                icon: "success",
                                title: "預約成功，即將跳轉",
                                showConfirmButton: false,
                                timer: 1500
                            }).then(() => {
                                window.location.href = '@Url.Action("BookCheck", "BookDate")';
                            });
                        } else {
                            Swal.fire({
                                icon: "error",
                                title: "預約失敗",
                                text: "餘額不足，請前往儲值",
                            })
                            //swal({
                            //    title: "錯誤",
                            //    text: "預約失敗: " + data.message,
                            //    icon: "warning",
                            //    button: "確認",
                            //})
                            .then(() => {
                                window.location.href = '@Url.Action("DepositPoints", "Deposit")';
                            });
                            @*alert('預約失敗: ' + data.message);
                            // 跳轉到指定頁面，例如錯誤頁面
                            window.location.href ='@Url.Action("DepositPoints", "Deposit")';*@
                        }
                    } catch (error) {
                        console.error('Error submitting booking:', error);
                    }
                } else {
                    Swal.fire({
                        icon: "error",
                        title: "錯誤:" + data.message,
                        text: "請先選擇寵物、醫生、日期和時段",
                    });
                    //swal({
                    //    title: "錯誤",
                    //    text: "請先選擇寵物、醫生、日期和時段",
                    //    icon: "warning",
                    //    button: "確認",
                    //})
                    /*alert('請先選擇寵物、醫生、日期和時段');*/
                }
            };

            // On component mount
            Vue.onMounted(() => {
                fetchDoctors();

                if (@Model.PetId != 0) {
                    selectedPet.value = "@Model.PetId"; // 初始化 selectedPet 為傳入的 PetId
                }
                else {
                    fetchPets();
                }
            });

            return {
                selectedPet,
                selectedDoctor,
                selectedDate,
                selectedTimeSlot,
                pets,
                doctors,
                availableDates,
                availableTimeSlots,
                fetchDoctors,
                fetchPets,
                fetchAvailableDates,
                fetchAvailableTimeSlots,
                submitBooking
            };
        }
    });

    app.mount('#app');

</script>
